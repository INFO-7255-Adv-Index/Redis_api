name: Semantic Versioning with Commit Messages


on:
  push:
    branches:
      - master  # Replace with your main branch name
  pull_request:
    types: [closed]

jobs:
  build:
    name: Create Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Determine commit messages since last tag
        id: commit_messages
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/* || echo "Failed to fetch tags"
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1` || echo "Failed to get latest tag")
          git log $latestTag..HEAD --oneline > commit_messages.txt || echo "Failed to get commit messages"

      - name: Rust semver
        id: semver_cargo
        uses: obi1kenobi/cargo-semver-checks-action@v2
          # Use a Rust-specific tool to analyze commit messages and determine the next version
          # Example: cargo-semantic-version or any other tool you prefer
          # Update the Cargo.toml file with the new version

      - name: Version Bump
        id: semver
        uses: saadmk11/github-actions-version-updater@v0.8.1
        with:
            token: ${{ secrets.WORKFLOW_SECRET }}
          # Update the Cargo.toml file with the new version
      - name: Update Changelog
        id: changelog
        run: |
          # Update the changelog file with the new version and generated changelog

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.semver.outputs.next_version }}
          release_name: Release ${{ steps.semver.outputs.next_version }}
          draft: false
          prerelease: false
